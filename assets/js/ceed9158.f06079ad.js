"use strict";(self.webpackChunkmediterraneus_docs=self.webpackChunkmediterraneus_docs||[]).push([[2669],{19038:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"running-the-protocol/issuer-rs","title":"Issuer","description":"Issuer of verifiable credentials using smart contracts to bind Externally Owned Accounts (EOAs) with Self-Sovereign Identities (SSI).","source":"@site/docs_mediterraneus/running-the-protocol/issuer-rs.md","sourceDirName":"running-the-protocol","slug":"/running-the-protocol/issuer-rs","permalink":"/mediterraneus/running-the-protocol/issuer-rs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"description":"Issuer of verifiable credentials using smart contracts to bind Externally Owned Accounts (EOAs) with Self-Sovereign Identities (SSI)."},"sidebar":"tutorialSidebar","previous":{"title":"Smart contracts","permalink":"/mediterraneus/running-the-protocol/smart-contracts"},"next":{"title":"Frontend","permalink":"/mediterraneus/running-the-protocol/frontend-demo"}}');var s=r(74848),i=r(28453);const o={sidebar_position:2,description:"Issuer of verifiable credentials using smart contracts to bind Externally Owned Accounts (EOAs) with Self-Sovereign Identities (SSI)."},c="Issuer",a={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Prepare environment",id:"prepare-environment",level:2},{value:"Running the Application",id:"running-the-application",level:2},{value:"Run everything via Docker",id:"run-everything-via-docker",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"issuer",children:"Issuer"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/Cybersecurity-LINKS/mediterraneus-issuer-rs",children:"GitHub repository"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.rust-lang.org/learn/get-started",children:"cargo"}),", with ",(0,s.jsx)(n.code,{children:"rustc 1.74 or newer"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"docker"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prepare-environment",children:"Prepare environment"}),"\n",(0,s.jsxs)(n.ol,{start:"0",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add the ABI source for generating contract bindings. This procedure is requested only when the contract definition changes. You just need to copy the ",(0,s.jsx)(n.code,{children:"artifacts/contracts/IDentity.sol/Identity.json"})," ABI file in the ",(0,s.jsx)(n.code,{children:"smart-contracts"})," directory.\nAbi sources are generated in the ",(0,s.jsx)(n.a,{href:"/mediterraneus/running-the-protocol/smart-contracts",children:"smart contracts repo"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:".env"})," file starting from ",(0,s.jsx)(n.code,{children:".env.example"})," and update the values accordingly to your development enviroment."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-editorconfig",children:'# Example from .env.example\n# Rust flags\nRUST_BACKTRACE=1\nRUST_LOG=debug # minimum level of logging, also "info" is a possible value\n\n# HTTP SERVER SETUP\nHOST_ADDRESS=127.0.0.1 # "0.0.0.0" for deploying, "127.0.0.1" for dev\nHOST_PORT=3213\n\n# DLT CONFIG\nNODE_URL="https://api.testnet.shimmer.network"\nFAUCET_API_ENDPOINT="https://faucet.testnet.shimmer.network/api/enqueue"\nRPC_PROVIDER="https://json-rpc.evm.testnet.shimmer.network"\nCHAIN_ID=1073\n\n# KEY STORAGE CONFIGURATION\nKEY_STORAGE_STRONGHOLD_SNAPSHOT_PATH="./key_storage.stronghold"\nKEY_STORAGE_STRONGHOLD_PASSWORD="some_hopefully_secure_password"\nKEY_STORAGE_MNEMONIC="<key storage mnemonic>"\n\nISSUER_PRIVATE_KEY="<issuer_private_key>"\nIDENTITY_SC_ADDRESS="<address of the Identity smart contract>"\n\n# DATABASE CONNECTION CONFIG\nDB_USER="<db_user>"\nDB_PASSWORD="<db_password>"\nDB_NAME="identity"\nDB_HOST=<issuer db hostname> # "issuer-postgres" for deploying, "127.0.0.1 " for dev\nDB_PORT=5432 # "5432" for deploying, "5433" for dev\nDB_MAX_POOL_SIZE=16\n'})}),"\n",(0,s.jsx)(n.h2,{id:"running-the-application",children:"Running the Application"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Start up the database by running:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker compose --profile dev up -d\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Run the issuer service"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# Run command in debug mode\ncd server\ncargo run --profile develop\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Sometimes it may be useful to ",(0,s.jsx)(n.strong,{children:"override"})," ",(0,s.jsx)(n.code,{children:".env"})," parameters using cli args.\nThe complete list of parameters is available typing the ",(0,s.jsx)(n.code,{children:"cargo run --profile develop -- --help"})," command"]}),"\n",(0,s.jsx)(n.p,{children:"For example, it is possible to define parameters for testing on different nodes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'cd server\n# For local node Provider\ncargo run --profile develop -- --rpc-provider "http://127.0.0.1:8545/" --chain-id 31337\n\n# For Shimmer Provider\ncargo run --profile develop -- --rpc-provider "https://json-rpc.evm.testnet.shimmer.network" --chain-id 1073\n\n# For Sepolia \ncargo run --profile develop -- --rpc-provider https://sepolia.infura.io/v3/<API_KEY> --chain-id 11155111\n'})}),"\n",(0,s.jsx)(n.h2,{id:"run-everything-via-docker",children:"Run everything via Docker"}),"\n",(0,s.jsxs)(n.p,{children:["Beware of the configuration of the environment variables. In addition, update the ",(0,s.jsx)(n.code,{children:"docker-compose.yaml"})," accordingly."]}),"\n",(0,s.jsx)(n.p,{children:"Copy the smart contract json files to create the Rust bindings (mandatory if the smart contracts change. There is already a copy in this repo)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# assuming the mediterraneus-smart-contracts folder is located in the same root folder of mediterraneus-connector-rs\ncp ../mediterraneus-smart-contracts/artifacts/contracts/Identity.sol/Identity.json ./smart-contracts\n"})}),"\n",(0,s.jsx)(n.p,{children:"Commands to build the app\u2019s container image and launch the app container:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker compose --profile deploy up -d\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(96540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);