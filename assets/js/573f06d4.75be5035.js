"use strict";(self.webpackChunkmediterraneus_docs=self.webpackChunkmediterraneus_docs||[]).push([[2],{28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>c});var n=r(96540);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}},78453:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/architecture-d03d5ece851ece4cb42de13ace6883c6.png"},91720:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"overview","title":"Overview","description":"Architecture","source":"@site/docs_embrave/overview.md","sourceDirName":".","slug":"/overview","permalink":"/embrave/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Embrave","permalink":"/embrave/intro"},"next":{"title":"Protocols","permalink":"/embrave/protocols"}}');var o=r(74848),i=r(28453);const s={sidebar_position:2},c="Overview",a={},d=[];function l(e){const t={a:"a",code:"code",em:"em",h1:"h1",header:"header",img:"img",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"overview",children:"Overview"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Architecture",src:r(78453).A+"",title:"Architecture",width:"590",height:"264"})}),"\n",(0,o.jsxs)(t.p,{children:["The system has the purpose to provide integrity verification throught a dynamic framework constrained-devices oriented.\nIt is designed to support dynamism for ",(0,o.jsx)(t.em,{children:"Attesters"})," joining to the framework."]}),"\n",(0,o.jsxs)(t.p,{children:["For this reason, a ",(0,o.jsx)(t.em,{children:"Join protocol"})," ",(0,o.jsx)(t.a,{href:"/embrave/protocols#attester-join",children:(0,o.jsx)(t.code,{children:"attester-join"})})," has been defined to support eventually external devices, not owned by the framework propietary."]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);